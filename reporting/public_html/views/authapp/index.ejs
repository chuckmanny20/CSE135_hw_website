<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>CSE 135 HW Lives!</title>
</head>

<body>
  <h1>Hi <%= name %></h1>
	<h1>CSE 135 HW1 Lives!</h1>
	<h2>Reporting.zhaoxinglyu.site</h2>
	<script>
		document.write(`Live @ ${new Date()}`);
	</script>

</body>

<form action="/authapp/metric" method="POST">
	<button type="submit">Get Detailed Report</button>
</form>

<!-- we use method-override b/c we want to do an app.delete() but forms can only do GET and POST -->
<form action="/authapp/logout?_method=DELETE" method="POST">
	<button type="submit">Log Out</button>
</form>

<% if(isAdmin) { %>
<form action="/authapp/users" method="POST">
	<button type="submit">User Manager</button>
</form>
<% } %>

<div class="chart--row">
	<div id="myChart2" class="chart--container">
		<a class="zc-ref" href="https://www.zingchart.com">Powered by ZingChart</a>
	</div>
	<div id="myChart3" class="chart--container">
		<a class="zc-ref" href="https://www.zingchart.com">Powered by ZingChart</a>
	</div>
</div>

<zing-grid id="grid1" caption="User Device Size Data" compact="" zebra="" role="grid" viewport="tablet-portrait"
	editor-controls layout="raw" layout-controls pager page-size="5"></zing-grid>


<script>
	// ----------------------------------
	// send GET request and get the JSON object return
	// dataType: static/performance/activity, target: isCSSAllowed/isImageAllowed/etc
	// return: array of target data
	function getData(dataType, target, needParse = true) {
		var httpRequest = new XMLHttpRequest();
		var url = 'https://zhaoxinglyu.site/api/' + dataType;
		httpRequest.open('GET', url, false);
		httpRequest.send();
		if (httpRequest.readyState == 4 && httpRequest.status == 200) {
			var jsonText = httpRequest.responseText;
			if (needParse)
				return parseJsonObject(jsonText, target);
			else
				return jsonText;
		};
	}

	// parse JSON text of http response, and get the target data
	// param: jsonText, target: isCSSAllowed/isImageAllowed/etc
	// return: array of target data
	function parseJsonObject(jsonText, target) {
		var jsonObject = JSON.parse(jsonText);
		var res = [];
		for (var ind in jsonObject) {
			res.push(jsonObject[ind][target]);
		}
		return res;
	}

	// ----------- Plot Pie Chart -----------
	window.addEventListener('load', () => {
		var curPageData = getData('activity', 'curPage');

		// Top 3 accessed pages
		var first = 0, second = -1, third = -2;
		var firstPage, secondPage, thirdPage;

		const map = new Map();
		for (var ind in curPageData) {
			var page = curPageData[ind];
			if (map.has(page)) map.set(page, map.get(page) + 1);
			else map.set(page, 1);

			const accessedTime = map.get(page);
			if (accessedTime > first) {
				first = accessedTime;
				firstPage = page;
			} else if (accessedTime > second) {
				second = accessedTime;
				secondPage = page;
			} else if (accessedTime > third) {
				third = accessedTime;
				thirdPage = page;
			}
		}

		map.set('Other pages', 0);
		for (let [key, value] of map) {
			if (key == firstPage || key == secondPage || key == thirdPage)
				continue;
			map.set('Other pages', map.get('Other pages') + 1);
		}

		var pageData = [];
		for (let [key, value] of map) {
			if (key == firstPage || key == secondPage || key == thirdPage || key == 'Other pages')
				pageData.push({ text: key, values: [value] });
		}
		let chartConfig3 = {
			type: 'pie',
			title: {
				text: 'Accessed page',
			},
			legend: {
				"toggle-action": "hide",
				"header": {
					"text": "Accessed page"
				},
				"item": {
					"cursor": "pointer"
				},
				"draggable": true,
				"drag-handler": "icon"
			},
			series: pageData
		};

		zingchart.render({
			id: 'myChart3',
			data: chartConfig3,
			height: '100%',
			width: '100%',
		});

	});
	// ----------- Plot Pie Chart -----------
</script>


<script>
	// ----------- Plot Bar Chart -----------
	var timeTotalLoad = getData('performance', 'timeTotalLoad');
	timeTotalLoad.sort(function(a, b){return b-a});

	if (timeTotalLoad.length > 7)
		timeTotalLoad = timeTotalLoad.slice(0, 7);

	let chartConfig2 = {
		type: "bar",
		title: {
			text: '7 Slowest Loading Times (ms)',
		},
		series: [{
			values: timeTotalLoad,
		},
		]
	};

	zingchart.render({
		id: 'myChart2',
		data: chartConfig2,
		height: '100%',
		width: '100%',
	});
	// ----------- Plot Bar Chart -----------

</script>


<script>
	// ----------- Plot Grid -----------
	function select(obj, attr) {
		if (typeof obj !== 'object' || !Array.isArray(attr)) return;
		let tempArr = [...attr];
		return JSON.parse(JSON.stringify(obj, tempArr));
	}

	function noRepeat(json, attr = null) {
		if (!Array.isArray(json)) {
			return;
		}

		for (var i = 0; i < json.length; i++)
			if (!json[i][attr]) json[i][attr] = 'Unknown';

		for (var i = 0; i < json.length; i++) {
			for (var j = i + 1; j < json.length;) {
				if (json[i][attr] === json[j][attr])
					json.splice(j, 1);
				else
					j++;
			}
		}
		return json;
	}

	var staticData = getData('static', '', false);

	const keptSizeAttr = ['Userid', 'userScreenWidth', 'userScreenHeight', 'userWindowWidth', 'userWindowHeight'];
	var deviceSizeData = select(JSON.parse(staticData), keptSizeAttr);

	const zgRef = document.querySelector('#grid1');
	zgRef.setData(noRepeat(deviceSizeData, 'Userid'));
	// ----------- Plot Grid -----------
</script>

</html>
